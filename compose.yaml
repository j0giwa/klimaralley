services:
  mysqldb:
    container_name: mimir
    image: mysql:8.0
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_DATABASE: klimaralley
      MYSQL_INITDB_SKIP_TZINFO: 1
    ports:
      - "3306:3306"
    networks:
      - bifrost
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./database/klimaralley.sql:/docker-entrypoint-initdb.d/klimaralley.sql

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: mysqldb
      PMA_ABSOLUTE_URI: http://localhost:8081/
    ports:
      - "8081:80"
    networks:
      - bifrost
    depends_on:
      mysqldb:
        condition: service_healthy 
        
  spring:
    container_name: asgard
    depends_on:
      mysqldb:
        condition: service_healthy
    build:
      context: klimaralley-server
      dockerfile: Dockerfile
    image: klimaserver:latest
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/klimaralley
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ''
    networks:
      - bifrost

  klimaralley-hub:
    container_name: klimaralley
    image: klimaralley-hub:latest
    build:
      context: ./klimaralley-hub
      dockerfile: Dockerfile
    networks:
      - bifrost
    depends_on:
      - spring

  klimaralley-flut:
    container_name: flut
    image: klimaralley-flut:latest
    build:
      context: klimaralley-flut
      dockerfile: Dockerfile
    networks:
      - bifrost
    depends_on:
      - spring

  klimaralley-recycling:
    container_name: recycling
    image: klimaralley-recycling:latest
    build:
      context: klimaralley-recycling
      dockerfile: Dockerfile
    networks:
      - bifrost
    depends_on:
      - spring

  klimaralley-wasserarm:
    container_name: wasserarm
    image: klimaralley-wasserarm:latest
    build:
      context: klimaralley-wasserarm
      dockerfile: Dockerfile
    networks:
      - bifrost
    depends_on:
      - spring

  nginx:
    container_name: midgard
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - bifrost
    depends_on:
      - klimaralley-hub
      - klimaralley-flut
      - klimaralley-recycling
      - klimaralley-wasserarm

networks:
  bifrost:
    driver: bridge
